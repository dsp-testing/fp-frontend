access_log off;
error_log /dev/stdout info;
charset utf-8;
lua_package_path '~/lua/?.lua;;';
lua_shared_dict discovery 1m;
lua_shared_dict jwks 1m;
lua_code_cache on; # Need to be set for session storage to work.
lua_use_default_type off;
proxy_buffering off;
resolver "${RESOLVER}";
tcp_nodelay off;
tcp_nopush on;
gzip on;
gzip_proxied any;
underscores_in_headers on;
gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    image/svg+xml;

server {
    listen "${APP_PORT}";
    root "${APP_DIR}";
    server_name  _;
    error_page 404 @rewrites;

    # Will protect the whole server. this prevents users of beeing logged out if they stay in the app
    # for a prolonged period of time.
    set $proxy_cookie "";
    set $session_secret "${OIDC_PASSWORD}";
    set $session_cookie_persistent on;
    set $session_cookie_lifetime   604800; # One week
    set $app_callback_path  "${APP_CALLBACK_PATH}";
    set $app_login_path "${APP_LOGIN_PATH}";
    set $app_path_prefix "${APP_PATH_PREFIX}";
    set $oidc_agentname "${OIDC_AGENTNAME}";
    set $oidc_password "${OIDC_PASSWORD}";
    set $oidc_host_url "${OIDC_HOST_URL}";

    access_by_lua_file oidc_access.lua;

    # saving ADRUM(EUM) cookie for subsequent requests
    # as this is done on the first request of a session data will be correct for the rest.
    header_filter_by_lua_file adrum_cookie_saver.lua;

    # Server headers. Will be overwritten if you set them in blocks.
    proxy_set_header    Connection "";
    proxy_set_header    Referer $http_referer;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    X-NginX-Proxy true;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    Cookie $proxy_cookie;
    proxy_http_version  1.1;
    proxy_ssl_verify    off;

    add_header          X-Application-Id "${APP_NAME} ${APP_VERSION} med proxy mot ${APP_API_GATEWAY}";
    #add_header          X-Debug-Cookie $proxy_cookie;
    add_header          X-Debug-Proxy-Host 'http://$proxy_host/ $scheme://$host:$server_port/';


    # Lanuage files are served from disk
    location /fpsak/sprak/ {
        alias /app/fpsak/sprak/;
    }

    # Simple Proxy to backend
    location  "${APP_API_PATH}" {
        proxy_pass "${APP_API_GATEWAY}${APP_API_PATH}";
    }

    # Simple Proxy to backend middlertidig fix frem til bedre løsning kommer på plass.
    location  /fpsak/oppgaveredirect {
        proxy_pass       "${APP_API_GATEWAY}/fpsak/oppgaveredirect";
        proxy_redirect   "~*/fpsak/#/(.+)$" /fpsak/$1;
        header_filter_by_lua_block {
            ngx.header.content_type = nil
        }
    }
    # Health check for NAIS
    location = "${APP_PATH_PREFIX}health/isAlive" {
        return 200 "Application:UP";
        add_header Content-Type text/plain;
    }

    # Readiness check for NAIS
    location = "${APP_PATH_PREFIX}health/isReady" {
        return 200 "Application:READY";
        add_header Content-Type text/plain;
    }

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg)$ {
        access_log off;
        expires 365d;

        ## No need to bleed constant updates. Send the all shebang in one fell swoop.
        tcp_nodelay off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    # Just slap frontend directly to the prefix
    location = / {
        return 301 "${APP_PATH_PREFIX}";
    }

    # To make sure any assets can get through :)
    location "${APP_PATH_PREFIX}" {
        # Hvis vi tillater browser-caching vil vi ikke ha nedetidsfri deploy (!)
        add_header Cache-Control no-cache;
        try_files $uri @rewrites;
    }

    # If no asset matches, send it to your javascript app. Hopefully it's a route in the app!
    location @rewrites {
        #add_header Cache-Control no-cache;
        rewrite ^(.+)$ /fpsak/index.html last;
    }
}
